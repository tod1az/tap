generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model assigns {
  id         Int       @id @default(autoincrement())
  stock      Int
  user_id    Int
  item_id    Int
  date       DateTime  @default(now()) @db.Timestamp(6)
  final_date DateTime? @db.Timestamp(6)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  items      items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "assigns_item")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "assigns_user")

  @@index([date], map: "idx_assigns_date")
  @@index([item_id], map: "idx_assigns_item_id")
  @@index([user_id], map: "idx_assigns_user_id")
}

model employees {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  lastname   String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  users      users[]
}

model itemloss {
  id         Int       @id @default(autoincrement())
  stock      Int
  description String
  user_id    Int?
  item_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(6)
  items      items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "itemloss_item")
  users      users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "itemloss_user")

  @@index([item_id], map: "idx_itemloss_item_id")
  @@index([user_id], map: "idx_itemloss_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model items {
  id           Int            @id @default(autoincrement())
  description  String
  price        Int
  stock        Int            @default(0)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  assigns      assigns[]
  itemloss     itemloss[]
  stockentries stockentries[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model stockentries {
  id         Int       @id @default(autoincrement())
  stock      Int
  item_id    Int
  date       DateTime  @default(now()) @db.Timestamp(6)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  items      items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "stockentries_item")

  @@index([date], map: "idx_stockentries_date")
  @@index([item_id], map: "idx_stockentries_item_id")
}

model users {
  id          Int        @id @default(autoincrement())
  email       String     @unique @db.VarChar(255)
  role        String     @default("user") @db.VarChar(50)
  password    String     @db.VarChar(255)
  employee_id Int?
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @default(now()) @db.Timestamp(6)
  assigns     assigns[]
  itemloss    itemloss[]
  employees   employees? @relation(fields: [employee_id], references: [id], onUpdate: NoAction, map: "users_employee")

  @@index([email], map: "idx_users_email")
  @@index([employee_id], map: "idx_users_employee_id")
}
